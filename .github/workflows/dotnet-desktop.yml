name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: MyApp.sln                         
      Test_Project_Path: Tests\MyApp.Tests.csproj                 
      Wap_Project_Directory: MyApp.Package    
      Wap_Project_Path: MyApp.Package\MyApp.Package.wapproj

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x  # Change this if your project requires a different version

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Clear NuGet Cache
      run: dotnet nuget locals all --clear

    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }} --source https://api.nuget.org/v3/index.json

    - name: Build solution
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

    - name: Run unit tests
      run: dotnet test ${{ env.Test_Project_Path }} --configuration ${{ matrix.configuration }} --no-build --verbosity normal

    - name: Create the app package
      run: msbuild ${{ env.Wap_Project_Path }} /p:Configuration=${{ matrix.configuration }} /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
